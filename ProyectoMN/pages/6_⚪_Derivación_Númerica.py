import streamlit as st

st.title("Derivaci√≥n N√∫merica")

st.markdown(
    """
    ### Definici√≥n
    La derivaci√≥n num√©rica es una t√©cnica que se utiliza para aproximar la derivada de una funci√≥n en un punto utilizando m√©todos computacionales. Estos m√©todos son √∫tiles cuando no se dispone de una f√≥rmula anal√≠tica para la funci√≥n o cuando calcular la derivada anal√≠tica es dif√≠cil o costoso.

    Existen diferentes f√≥rmulas utilizadas en la derivaci√≥n num√©rica para aproximar la derivada de una funci√≥n en un punto dado. Aqu√≠ se presentan algunas de las f√≥rmulas m√°s comunes:
    
    -Diferencias finitas hacia adelante:
    """
)
st.latex(r'''
   f'(x) ‚âà (f(x + h) - f(x)) / h
    ''')
st.markdown(
    """Esta f√≥rmula se basa en la aproximaci√≥n de la derivada utilizando la pendiente de una l√≠nea secante entre dos puntos cercanos, donde "h" es un peque√±o incremento en la variable "x"."""

)

st.markdown(
    """-Diferencias finitas hacia atr√°s:"""

)
st.latex(r'''
   f'(x) ‚âà (f(x) - f(x - h)) / h
    ''')
st.markdown(
    """Al igual que en la f√≥rmula hacia adelante, esta f√≥rmula aproxima la derivada utilizando la pendiente de una l√≠nea secante entre dos puntos cercanos, pero en este caso se utiliza un punto ligeramente menor que "x"."""

)

st.markdown(
    """-Diferencias finitas centradas:"""

)
st.latex(r'''
   f'(x) ‚âà (f(x + h) - f(x - h)) / (2h)
    ''')
st.markdown(
    """Esta f√≥rmula aproxima la derivada utilizando la pendiente de una l√≠nea secante que pasa por dos puntos sim√©tricos respecto al punto "x"."""

)
st.image("https://upload.wikimedia.org/wikipedia/commons/thumb/8/8c/Derivative.png/250px-Derivative.png")


st.markdown(
    """
    ### Aplicaciones

    La derivaci√≥n num√©rica tiene una amplia gama de aplicaciones en diversas √°reas. Algunas de las aplicaciones comunes de la derivaci√≥n num√©rica incluyen:

    üíæ An√°lisis de datos: La derivaci√≥n num√©rica se utiliza en el an√°lisis de datos para calcular la tasa de cambio de una funci√≥n en puntos espec√≠ficos. Esto puede ser √∫til para comprender patrones de cambio y tendencias en conjuntos de datos.

    üíæ Optimizaci√≥n num√©rica: La derivaci√≥n num√©rica se utiliza en problemas de optimizaci√≥n, donde se busca encontrar el valor √≥ptimo de una funci√≥n. Los m√©todos de optimizaci√≥n a menudo requieren c√°lculos de derivadas para guiar la b√∫squeda del valor √≥ptimo.

    üíæ C√°lculo de velocidades y aceleraciones: La derivaci√≥n num√©rica se utiliza en problemas de cinem√°tica para calcular velocidades y aceleraciones a partir de datos de posici√≥n. Esto es √∫til en √°reas como la mec√°nica, la f√≠sica de part√≠culas y la animaci√≥n por computadora.

    üíæ Ajuste de curvas: La derivaci√≥n num√©rica se utiliza en el ajuste de curvas para encontrar la mejor aproximaci√≥n de una funci√≥n a un conjunto de datos. Ayuda a determinar la pendiente y la concavidad de la funci√≥n en puntos espec√≠ficos.

    üíæ Procesamiento de im√°genes: En el campo del procesamiento de im√°genes, la derivaci√≥n num√©rica se utiliza para calcular gradientes de intensidad en im√°genes. Esto puede ayudar en tareas como detecci√≥n de bordes, segmentaci√≥n y mejora de im√°genes.

    Estas son solo algunas de las muchas aplicaciones de la derivaci√≥n num√©rica. En general, cualquier problema que requiera conocer la tasa de cambio instant√°nea de una funci√≥n en un punto dado puede beneficiarse de la derivaci√≥n num√©rica. Es una herramienta fundamental en el an√°lisis num√©rico y desempe√±a un papel crucial en muchos campos cient√≠ficos y de ingenier√≠a.
    """
) 
 
st.markdown('''
    ### Ejemplos
''') 

st.image                   ("https://arturoguillen90.files.wordpress.com/2014/06/derivacionnumerica02.png?w=625&h=429")

st.video("https://www.youtube.com/watch?v=5nRYIPCUYTA")

st.markdown(
    """
    ### C√≥digo
    """
) 
import streamlit as st

code = '''def f(x):
    return x**2  # Ejemplo de funci√≥n cuadr√°tica

x = 1.5  # Punto en el cual se eval√∫a la derivada
h = 0.001  # Incremento utilizado en la f√≥rmula de diferencias finitas

derivada = forward_difference(f, x, h)
print("La derivada en el punto", x, "es:", derivada)

'''
st.code(code, language='python')